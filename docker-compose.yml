# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP.NET Core service.

version: '3.9'

services:
  database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Change123!@#
    ports:
      - "1433:1433"
    networks:
      otel:

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      otel:

  mongodb:
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    # volumes:
    #   - dbdata6:/data/db
    networks:
      otel:

##### Services #####
  stock:
    image: stock
    build:
      context: .
      dockerfile: Services/StockService/StockService.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_HTTP_PORTS=443
      - ConnectionStringSql=Server=database;Database=StockDb;User ID=SA;Password=Change123!@#;TrustServerCertificate=True;
      - MessageQueueConnection__host=rabbitmq
      - MessageQueueConnection__username=guest
      - MessageQueueConnection__password=guest
      - OpenTelemetryURL=http://collector:4317

    ports:
      - 4112:80 #Swagger
      - 4113:443 #API
    depends_on:
      - rabbitmq
    networks:
      otel:
    restart:
      on-failure

  wallet:
    image: wallet
    build:
      context: .
      dockerfile: Services/WalletService/WalletService.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=80
      - ASPNETCORE_HTTP_PORTS=443
      - ConnectionStringSql=Server=database;Database=WalletDb;User ID=SA;Password=Change123!@#;TrustServerCertificate=True;
      - MessageQueueConnection__host=rabbitmq
      - MessageQueueConnection__username=guest
      - MessageQueueConnection__password=guest
      - OpenTelemetryURL=http://collector:4317
    ports:
      - 4114:443 #API
    depends_on:
      - rabbitmq
    networks:
      otel:
    restart:
      on-failure

##### Observability #####
 # Jaeger
  jaeger:
    container_name: jaeger-tracing
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
    networks:
      otel:
    restart:
      on-failure
# Prometheus
  prometheus:
    container_name: prometheus-metrics
    image: prom/prometheus
    volumes:
      - ./otel/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      otel:
    restart:
      on-failure
 # Grafana Loki
  loki:
    container_name: loki
    image: grafana/loki:3.0.0
    volumes:
      - ./otel/loki-config.yaml:/conf/loki-config.yaml
    command: [ "--config.file=/conf/loki-config.yaml" ]
    ports:
      - 3100:3100
    networks:
      otel:
    restart:
      on-failure
    healthcheck:
      test: wget --quiet --tries=1 --output-document=- http://loki:3100/ready | grep -q -w ready || exit 1
      start_period: 20s
      interval: 10s
      timeout: 1s
      retries: 12  # try for 2 minutes
 # Grafana
  grafana:
    container_name: grafana
    image: grafana/grafana:main-ubuntu
    user: "0"
    ports:
      - "3000:3000"
    volumes:
      - ./otel/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./otel/default.yaml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./otel/dashboard.json:/usr/lib/dashboards/dashboard.json
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    networks:
      otel:
    depends_on:
        loki:
            condition: service_healthy
    restart:
      on-failure
# Collector
  collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
    networks:
      otel:
    depends_on:
      - jaeger
      - prometheus
      - loki
      - grafana
    restart:
      on-failure
networks:
  otel:
volumes:
  dbdata6:
